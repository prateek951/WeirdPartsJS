//POINT 1 

//WHENEVER ANY JAVASCRIPT CODE RUNS,SYNTAX PARSER WILL PARSE THE CODE CHARACTER BY CHARACTER
//AND FOR THE CODE THAT RUNS BY DEFAULT GLOBAL OBJECT AND SPECIAL KEYWORD THIS IS CREATED FOR US

//POINT 2

//WHENEVER JAVASCRIPT CODE RUNS,GLOBAL OBJECT IS ASSOCIATED TO THE WINDOW OR TAB IN WHICH IT IS RUNNING(AN EXECUTION CONTEXT WAS CREATED AT THE GLOBAL LEVEL)

//POINT 3

//AT GLOBAL LEVEL,Global Object is same as this


//HOISTING(SETTING MEMORY SPACE ASIDE FOR VARIABLES AND FUNCTIONS)

b();    //FUNCTION RUNS

console.log(a);  //undefined

//ALL VARIABLES ARE INITIALLY SET TO undefined AND WHEN THE EXECUTION PHASE BEGINS THEY ARE GIVEN THEIR FIRST VALUES.

var a = 'Hello World'; //ON COMMENTING THIS LINE ABOVE CONSOLE.LOG WILL RETURN REFERENCE ERROR : a IS NOT DEFINED

function b(){

    console.log('Called b!');

}   //THE FUNCTION IS SET ASIDE MEMORY SPACE BEFORE THE EXECUTION BEGAN AND SITTING IN THE EXECUTION CONTEXT



//POINT 4

//WHEN YOUR CODE IS EXECUTED AN EXECUTION CONTEXT IS CREATED

//AT THE BASE LEVEL WHEN YOU ARE NOT INSIDE A FUNCTION,GLOBAL OBJECT IS CREATED BY JAVASCRIPT ENGINE
//AS A PART OF THE EXECUTION CONTEXT

//IF YOU ARE RUNNNING CODE IN THE BROWSER,THE GLOBAL OBJECT IS THE WINDOW OBJECT

//SPECIAL VARIABLE THIS IS GIVEN TO US

//LINK TO OUTER ENVIRONMENT

//EXECUTION CONTEXT IS RUNNING YOUR CODE(i.e IF YOU ARE CREATING VARIABLES AND FUNCTIONS, THEN THAT'S GOING TO SIT ON THE GLOBAL OBJECT)

//ALWAYS AVOID HOSTING

var c;  //INITIALLY c IS SET TO UNDEFINED AS MEMORY SPACE IS SET ASIDE FOR IT BY HOISTING

//HERE c IS PLACED IN MEMORY DURING THE CREATION PHASE,SO EXECUTION CONTEXT SAW var a and SET a TO undefined

//undefined IS A SPECIAL KEYWORD (it actually takes up memory) .VARIABLES RECEIVE THIS VALUE IN THE CREATION PHASE

//NEVER SET A VARIABLE TO undefined EXPLICITLY

console.log(c); //undefined and not defined are not same. undefined IN JS MEANS THAT THE VARIABLE IS NOT SET.

if(c === undefined)     //c BOTH TYPE AND VALUE CHECkED TO undefined
    {
        console.log('c is undefined');  //THIS GETS LOGGED ON THE CONSOLE
    }
    else {
        console.log('c is defined');
    }


    //SCOPE CHAIN

    function b() {
        console.log(myVar);
    }
    function a(){
        var myVar = 2;
        b();
    }
    var myVar = 1;
    a();
